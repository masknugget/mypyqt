QUrl
Functions¶
    def __eq__ (url)
    def __lt__ (url)
    def __ne__ (url)
    def __reduce__ ()
    def __repr__ ()
    def adjusted (options)
    def authority ([options=QUrl.PrettyDecoded])
    def clear ()
    def errorString ()
    def fileName ([options=QUrl.FullyDecoded])
    def fragment ([options=QUrl.PrettyDecoded])
    def hasFragment ()
    def hasQuery ()
    def host ([arg__1=QUrl.FullyDecoded])
    def isEmpty ()
    def isLocalFile ()
    def isParentOf (url)
    def isRelative ()
    def isValid ()
    def matches (url, options)
    def password ([arg__1=QUrl.FullyDecoded])
    def path ([options=QUrl.FullyDecoded])
    def port ([defaultPort=-1])
    def query ([arg__1=QUrl.PrettyDecoded])
    def resolved (relative)
    def scheme ()
    def setAuthority (authority[, mode=TolerantMode])
    def setFragment (fragment[, mode=TolerantMode])
    def setHost (host[, mode=DecodedMode])
    def setPassword (password[, mode=DecodedMode])
    def setPath (path[, mode=DecodedMode])
    def setPort (port)
    def setQuery (query)
    def setQuery (query[, mode=TolerantMode])
    def setScheme (scheme)
    def setUrl (url[, mode=TolerantMode])
    def setUserInfo (userInfo[, mode=TolerantMode])
    def setUserName (userName[, mode=DecodedMode])
    def swap (other)
    def toDisplayString ([options=QUrl.FormattingOptions(PrettyDecoded)])
    def toEncoded ([options=QUrl.FullyEncoded])
    def toLocalFile ()
    def toString ([options=QUrl.FormattingOptions(PrettyDecoded)])
    def url ([options=QUrl.FormattingOptions(PrettyDecoded)])
    def userInfo ([options=QUrl.PrettyDecoded])
    def userName ([options=QUrl.FullyDecoded])
Static functions¶
    def fromAce (arg__1)
    def fromEncoded (url[, mode=TolerantMode])
    def fromLocalFile (localfile)
    def fromPercentEncoding (arg__1)
    def fromStringList (uris[, mode=TolerantMode])
    def fromUserInput (userInput[, workingDirectory=””[, options=QUrl.DefaultResolution]])
    def idnWhitelist ()
    def setIdnWhitelist (arg__1)
    def toAce (arg__1)
    def toPercentEncoding (arg__1[, exclude=QByteArray()[, include=QByteArray()]])
    def toStringList (uris[, options=QUrl.FormattingOptions(PrettyDecoded)])

    
QUrlQuery
Functions¶
    def __eq__ (other)
    def __ne__ (other)
    def addQueryItem (key, value)
    def allQueryItemValues (key[, encoding=QUrl.PrettyDecoded])
    def clear ()
    def hasQueryItem (key)
    def isEmpty ()
    def query ([encoding=QUrl.PrettyDecoded])
    def queryItemValue (key[, encoding=QUrl.PrettyDecoded])
    def queryItems ([encoding=QUrl.PrettyDecoded])
    def queryPairDelimiter ()
    def queryValueDelimiter ()
    def removeAllQueryItems (key)
    def removeQueryItem (key)
    def setQuery (queryString)
    def setQueryDelimiters (valueDelimiter, pairDelimiter)
    def setQueryItems (query)
    def swap (other)
    def toString ([encoding=QUrl.PrettyDecoded])


QVariantAnimation
Functions¶
    def currentValue ()
    def easingCurve ()
    def endValue ()
    def keyValueAt (step)
    def setDuration (msecs)
    def setEasingCurve (easing)
    def setEndValue (value)
    def setKeyValueAt (step, value)
    def setStartValue (value)
    def startValue ()
    def valueChanged (value)
Virtual functions¶
    def interpolated (from, to, progress)
    def updateCurrentValue (value)


QVersionNumber
Functions¶
    def __eq__ (, rhs)
    def __ge__ (, rhs)
    def __gt__ (, rhs)
    def __le__ (, rhs)
    def __lt__ (, rhs)
    def __ne__ (, rhs)
    def isNormalized ()
    def isNull ()
    def isPrefixOf (other)
    def majorVersion ()
    def microVersion ()
    def minorVersion ()
    def normalized ()
    def segmentAt (index)
    def segmentCount ()
    def segments ()
    def toString ()
Static functions¶
    def commonPrefix (v1, v2)
    def compare (v1, v2)
    def fromString (string)
    def fromString (string[, suffixIndex=None])


QUuid
Functions¶
    def __eq__ (orig)
    def __ge__ (, rhs)
    def __gt__ (other)
    def __le__ (, rhs)
    def __lt__ (other)
    def __ne__ (orig)
    def __reduce__ ()
    def __repr__ ()
    def isNull ()
    def toByteArray ([mode=WithBraces])
    def toRfc4122 ()
    def toString ([mode=WithBraces])
    def variant ()
    def version ()
Static functions¶
    def createUuid ()
    def createUuidV3 (ns, baseData)
    def createUuidV3 (ns, baseData)
    def createUuidV5 (ns, baseData)
    def createUuidV5 (ns, baseData)
    def fromRfc4122 (arg__1)
    def fromString (string)


QWaitCondition
Functions¶
    def notify_all ()
    def notify_one ()
    def wait (lockedMutex, time)
    def wait (lockedMutex[, deadline=QDeadlineTimer(QDeadlineTimer.Forever)])
    def wait (lockedReadWriteLock, time)
    def wait (lockedReadWriteLock[, deadline=QDeadlineTimer(QDeadlineTimer.Forever)])
    def wakeAll ()
    def wakeOne ()


QWriteLocker
Functions¶
    def __enter__ ()
    def __exit__ (arg__1, arg__2, arg__3)
    def readWriteLock ()
    def relock ()
    def unlock ()


QXmlStreamAttribute
Functions¶
    def __eq__ (other)
    def __ne__ (other)
    def isDefault ()
    def name ()
    def namespaceUri ()
    def prefix ()
    def qualifiedName ()
    def value ()


QXmlStreamAttributes
Functions¶
    def __add__ (l)
    def __add__ (l)
    def __eq__ (arg__1)
    def __iadd__ (l)
    def __lshift__ (l)
    def __lshift__ (l)
    def __ne__ (arg__1)
    def append (namespaceUri, name, value)
    def append (qualifiedName, value)
    def at (i)
    def back ()
    def capacity ()
    def clear ()
    def constData ()
    def constFirst ()
    def constLast ()
    def count ()
    def data ()
    def empty ()
    def first ()
    def first (n)
    def front ()
    def hasAttribute (namespaceUri, name)
    def hasAttribute (qualifiedName)
    def insert (arg__1, arg__2)
    def isEmpty ()
    def isSharedWith (other)
    def last ()
    def last (n)
    def length ()
    def mid (pos[, len=-1])
    def move (from, to)
    def operator[] (i)
    def prepend (arg__1)
    def push_back (arg__1)
    def push_front (arg__1)
    def remove (i[, n=1])
    def removeAll (arg__1)
    def removeAt (i)
    def removeFirst ()
    def removeLast ()
    def removeOne (arg__1)
    def reserve (size)
    def resize (size)
    def shrink_to_fit ()
    def size ()
    def sliced (pos)
    def sliced (pos, n)
    def squeeze ()
    def swap (other)
    def swapItemsAt (i, j)
    def takeAt (i)
    def toVector ()
    def value (namespaceUri, name)
    def value (qualifiedName)
Static functions¶
    def fromVector (vector)


QXmlStreamEntityDeclaration
Functions¶
    def __eq__ (other)
    def __ne__ (other)
    def name ()
    def notationName ()
    def publicId ()
    def systemId ()
    def value ()
QXmlStreamEntityResolver


QXmlStreamNamespaceDeclaration
Functions¶
    def __eq__ (other)
    def __ne__ (other)
    def namespaceUri ()
    def prefix ()


QXmlStreamReader
Functions¶
    def addData (data)
    def addData (data)
    def addData (data)
    def addExtraNamespaceDeclaration (extraNamespaceDeclaraction)
    def addExtraNamespaceDeclarations (extraNamespaceDeclaractions)
    def atEnd ()
    def attributes ()
    def characterOffset ()
    def clear ()
    def columnNumber ()
    def device ()
    def documentEncoding ()
    def documentVersion ()
    def dtdName ()
    def dtdPublicId ()
    def dtdSystemId ()
    def entityDeclarations ()
    def entityExpansionLimit ()
    def entityResolver ()
    def error ()
    def errorString ()
    def hasError ()
    def isCDATA ()
    def isCharacters ()
    def isComment ()
    def isDTD ()
    def isEndDocument ()
    def isEndElement ()
    def isEntityReference ()
    def isProcessingInstruction ()
    def isStandaloneDocument ()
    def isStartDocument ()
    def isStartElement ()
    def isWhitespace ()
    def lineNumber ()
    def name ()
    def namespaceDeclarations ()
    def namespaceProcessing ()
    def namespaceUri ()
    def notationDeclarations ()
    def prefix ()
    def processingInstructionData ()
    def processingInstructionTarget ()
    def qualifiedName ()
    def raiseError ([message=””])
    def readElementText ([behaviour=ErrorOnUnexpectedElement])
    def readNext ()
    def readNextStartElement ()
    def setDevice (device)
    def setEntityExpansionLimit (limit)
    def setEntityResolver (resolver)
    def setNamespaceProcessing (arg__1)
    def skipCurrentElement ()
    def text ()
    def tokenString ()
    def tokenType ()
YearMonthDay
Functions¶
    def isValid ()


QXmlStreamWriter
Functions¶
    def autoFormatting ()
    def autoFormattingIndent ()
    def device ()
    def hasError ()
    def setAutoFormatting (arg__1)
    def setAutoFormattingIndent (spacesOrTabs)
    def setDevice (device)
    def writeAttribute (attribute)
    def writeAttribute (namespaceUri, name, value)
    def writeAttribute (qualifiedName, value)
    def writeAttributes (attributes)
    def writeCDATA (text)
    def writeCharacters (text)
    def writeComment (text)
    def writeCurrentToken (reader)
    def writeDTD (dtd)
    def writeDefaultNamespace (namespaceUri)
    def writeEmptyElement (namespaceUri, name)
    def writeEmptyElement (qualifiedName)
    def writeEndDocument ()
    def writeEndElement ()
    def writeEntityReference (name)
    def writeNamespace (namespaceUri[, prefix=””])
    def writeProcessingInstruction (target[, data=””])
    def writeStartDocument ()
    def writeStartDocument (version)
    def writeStartDocument (version, standalone)
    def writeStartElement (namespaceUri, name)
    def writeStartElement (qualifiedName)
    def writeTextElement (namespaceUri, name, text)
    def writeTextElement (qualifiedName, text)


QXmlStreamNotationDeclaration
Functions¶
    def __eq__ (other)
    def __ne__ (other)
    def name ()
    def publicId ()
    def systemId ()


Qt
Static functions¶
    def bin (s)
    def bom (s)
    def center (s)
    def dec (s)
    def endl (s)
    def fixed (s)
    def flush (s)
    def forcepoint (s)
    def forcesign (s)
    def hex (s)
    def left (s)
    def lowercasebase (s)
    def lowercasedigits (s)
    def noforcepoint (s)
    def noforcesign (s)
    def noshowbase (s)
    def oct (s)
    def reset (s)
    def right (s)
    def scientific (s)
    def showbase (s)
    def uppercasebase (s)
    def uppercasedigits (s)
    def ws (s)
