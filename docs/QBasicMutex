QBasicMutex
    Functions¶
        def lock ()
        def tryLock ()
        def try_lock ()
        def unlock ()

QBasicTimer
    Functions¶
        def isActive ()
        def start (msec, obj)
        def start (msec, timerType, obj)
        def stop ()
        def swap (other)
        def timerId ()


QBitArray
    Functions¶
        def __and__ (, arg__2)
        def __eq__ (other)
        def __getitem__ ()
        def __iand__ (arg__1)
        def __ior__ (arg__1)
        def __ixor__ (arg__1)
        def __len__ ()
        def __ne__ (other)
        def __or__ (, arg__2)
        def __setitem__ ()
        def __xor__ (, arg__2)
        def at (i)
        def bits ()
        def clear ()
        def clearBit (i)
        def count ()
        def count (on)
        def fill (val, first, last)
        def fill (val[, size=-1])
        def isEmpty ()
        def isNull ()
        def operator[] (i)
        def operator~ ()
        def resize (size)
        def setBit (i)
        def setBit (i, val)
        def size ()
        def swap (other)
        def testBit (i)
        def toUInt32 (endianness[, ok=None])
        def toggleBit (i)
        def truncate (pos)
    Static functions¶
        def fromBits (data, len)



QBuffer
    Functions¶
        def buffer ()
        def data ()
        def setBuffer (a)
        def setData (data)

QByteArray
    Functions¶
        def __add__ (, a2)
        def __add__ (, a2)
        def __add__ (, s)
        def __add__ (arg__1)
        def __add__ (arg__1)
        def __add__ (arg__1)
        def __add__ (s)
        def __eq__ (, a2)
        def __eq__ (arg__1)
        def __eq__ (s2)
        def __ge__ (, a2)
        def __ge__ (arg__1)
        def __ge__ (s2)
        def __getitem__ ()
        def __gt__ (, a2)
        def __gt__ (arg__1)
        def __gt__ (s2)
        def __iadd__ (a)
        def __iadd__ (a)
        def __iadd__ (arg__1)
        def __iadd__ (c)
        def __le__ (, a2)
        def __le__ (arg__1)
        def __le__ (s2)
        def __len__ ()
        def __lt__ (, a2)
        def __lt__ (, a2)
        def __lt__ (arg__1)
        def __lt__ (s2)
        def __mgetitem__ ()
        def __msetitem__ ()
        def __ne__ (, a2)
        def __ne__ (arg__1)
        def __ne__ (s2)
        def __reduce__ ()
        def __repr__ ()
        def __setitem__ ()
        def __str__ ()
        def append (a)
        def append (a)
        def append (c)
        def append (count, c)
        def append (s, len)
        def at (i)
        def back ()
        def capacity ()
        def cbegin ()
        def cend ()
        def chop (n)
        def chopped (len)
        def clear ()
        def compare (a[, cs=Qt.CaseSensitive])
        def contains (bv)
        def contains (c)
        def count ()
        def count (bv)
        def count (c)
        def data ()
        def endsWith (bv)
        def endsWith (c)
        def fill (c[, size=-1])
        def first (n)
        def front ()
        def indexOf (bv[, from=0])
        def indexOf (c[, from=0])
        def insert (i, c)
        def insert (i, count, c)
        def insert (i, data)
        def insert (i, data)
        def insert (i, s)
        def insert (i, s, len)
        def isEmpty ()
        def isLower ()
        def isNull ()
        def isSharedWith (other)
        def isUpper ()
        def last (n)
        def lastIndexOf (bv[, from=-1])
        def lastIndexOf (c[, from=-1])
        def left (len)
        def leftJustified (width[, fill=’ ‘[, truncate=false]])
        def length ()
        def mid (index[, len=-1])
        def operator[] (i)
        def prepend (a)
        def prepend (a)
        def prepend (c)
        def prepend (count, c)
        def prepend (s, len)
        def push_back (a)
        def push_front (a)
        def remove (index, len)
        def repeated (times)
        def replace (before, after)
        def replace (before, after)
        def replace (before, after)
        def replace (before, bsize, after, asize)
        def replace (index, len, s)
        def replace (index, len, s, alen)
        def reserve (size)
        def resize (size)
        def right (len)
        def rightJustified (width[, fill=’ ‘[, truncate=false]])
        def setNum (arg__1[, base=10])
        def setNum (arg__1[, base=10])
        def setNum (arg__1[, f=’g’[, prec=6]])
        def setRawData (a, n)
        def shrink_to_fit ()
        def simplified ()
        def size ()
        def sliced (pos)
        def sliced (pos, n)
        def split (sep)
        def squeeze ()
        def startsWith (bv)
        def startsWith (c)
        def swap (other)
        def toBase64 ([options=QByteArray.Base64Encoding])
        def toDouble ()
        def toFloat ()
        def toHex ([separator=’0’])
        def toInt ([, base=10])
        def toLong ([, base=10])
        def toLongLong ([, base=10])
        def toLower ()
        def toPercentEncoding ([exclude=QByteArray()[, include=QByteArray()[, percent=’%’]]])
        def toShort ([, base=10])
        def toUInt ([, base=10])
        def toULong ([, base=10])
        def toULongLong ([, base=10])
        def toUShort ([, base=10])
        def toUpper ()
        def trimmed ()
        def truncate (pos)

    Static functions¶
        def fromBase64 (base64[, options=QByteArray.Base64Encoding])
        def fromBase64Encoding (base64[, options=QByteArray.Base64Encoding])
        def fromBase64Encoding (base64[, options=QByteArray.Base64Encoding])
        def fromHex (hexEncoded)
        def fromPercentEncoding (pctEncoded[, percent=’%’])
        def fromRawData (data, size)
        def number (arg__1[, base=10])
        def number (arg__1[, base=10])
        def number (arg__1[, f=’g’[, prec=6]])

QByteArrayMatcher
    Functions¶
        def indexIn (ba[, from=0])
        def indexIn (str, len[, from=0])
        def pattern ()
        def setPattern (pattern)



Connection
    def swap (other)

 class PySide6.QtCore.QMetaObject.Connection¶

QCalendar
    Functions¶
        def dateFromParts (parts)
        def dateFromParts (year, month, day)
        def dateTimeToString (format, datetime, dateOnly, timeOnly, locale)
        def dayOfWeek (date)
        def daysInMonth (month[, year=Unspecified])
        def daysInYear (year)
        def hasYearZero ()
        def isDateValid (year, month, day)
        def isGregorian ()
        def isLeapYear (year)
        def isLunar ()
        def isLuniSolar ()
        def isProleptic ()
        def isSolar ()
        def isValid ()
        def maximumDaysInMonth ()
        def maximumMonthsInYear ()
        def minimumDaysInMonth ()
        def monthName (locale, month[, year=Unspecified[, format=QLocale.LongFormat]])
        def monthsInYear (year)
        def name ()
        def partsFromDate (date)
        def standaloneMonthName (locale, month[, year=Unspecified[, format=QLocale.LongFormat]])
        def standaloneWeekDayName (locale, day[, format=QLocale.LongFormat])
        def weekDayName (locale, day[, format=QLocale.LongFormat])

    Static functions¶
        def availableCalendars ()


QCborArray

    Functions¶
        def __add__ (v)
        def __eq__ (other)
        def __iadd__ (v)
        def __lshift__ (v)
        def __lt__ (other)
        def __ne__ (other)
        def append (value)
        def append (value)
        def at (i)
        def clear ()
        def compare (other)
        def contains (value)
        def empty ()
        def first ()
        def insert (i, value)
        def insert (i, value)
        def isEmpty ()
        def last ()
        def operator[] (i)
        def pop_back ()
        def pop_front ()
        def prepend (value)
        def prepend (value)
        def push_back (t)
        def push_front (t)
        def removeAt (i)
        def removeFirst ()
        def removeLast ()
        def size ()
        def swap (other)
        def takeAt (i)
        def takeFirst ()
        def takeLast ()
        def toCborValue ()
        def toJsonArray ()
        def toVariantList ()

    Static functions¶
        def fromJsonArray (array)
        def fromStringList (list)
        def fromVariantList (list)
        

QCborError

Functions¶
    def toString ()


QCborMap
    Functions¶
        def __eq__ (other)
        def __lt__ (other)
        def __ne__ (other)
        def clear ()
        def compare (other)
        def contains (key)
        def contains (key)
        def contains (key)
        def empty ()
        def isEmpty ()
        def keys ()
        def operator[] (key)
        def operator[] (key)
        def operator[] (key)
        def remove (key)
        def remove (key)
        def remove (key)
        def size ()
        def swap (othr)
        def take (key)
        def take (key)
        def take (key)
        def toCborValue ()
        def toJsonObject ()
        def toVariantHash ()
        def toVariantMap ()
        def value (key)
        def value (key)
        def value (key)

    Static functions¶
        def fromJsonObject (o)
        def fromVariantHash (hash)
        def fromVariantMap (map)

QCborParserError
    Functions¶
        def errorString ()


QCborStreamReader

    Functions¶
        def addData (data)
        def addData (data, len)
        def addData (data, len)
        def clear ()
        def containerDepth ()
        def currentOffset ()
        def currentStringChunkSize ()
        def device ()
        def enterContainer ()
        def hasNext ()
        def isArray ()
        def isBool ()
        def isByteArray ()
        def isContainer ()
        def isDouble ()
        def isFalse ()
        def isFloat16 ()
        def isFloat ()
        def isInteger ()
        def isInvalid ()
        def isLengthKnown ()
        def isMap ()
        def isNegativeInteger ()
        def isNull ()
        def isSimpleType ()
        def isSimpleType (st)
        def isString ()
        def isTag ()
        def isTrue ()
        def isUndefined ()
        def isUnsignedInteger ()
        def isValid ()
        def lastError ()
        def leaveContainer ()
        def length ()
        def next ([maxRecursion=10000])
        def parentContainerType ()
        def readByteArray ()
        def readString ()
        def reparse ()
        def reset ()
        def setDevice (device)
        def toBool ()
        def toDouble ()
        def toFloat ()
        def toInteger ()
        def toSimpleType ()
        def toUnsignedInteger ()
        def type ()


QCborStreamWriter

    Functions¶
        def append (b)
        def append (ba)
        def append (d)
        def append (f)
        def append (i)
        def append (i)
        def append (st)
        def append (str)
        def append (str[, size=-1])
        def append (tag)
        def append (u)
        def append (u)
        def appendByteString (data, len)
        def appendNull ()
        def appendTextString (utf8, len)
        def appendUndefined ()
        def device ()
        def endArray ()
        def endMap ()
        def setDevice (device)
        def startArray ()
        def startArray (count)
        def startMap ()
        def startMap (count)

QCborStringResultByteArray
QCborStringResultString
QCborValue

    Functions¶
        def __eq__ (other)
        def __lt__ (other)
        def __ne__ (other)
        def compare (other)
        def isArray ()
        def isBool ()
        def isByteArray ()
        def isContainer ()
        def isDateTime ()
        def isDouble ()
        def isFalse ()
        def isInteger ()
        def isInvalid ()
        def isMap ()
        def isNull ()
        def isRegularExpression ()
        def isSimpleType ()
        def isSimpleType (st)
        def isString ()
        def isTag ()
        def isTrue ()
        def isUndefined ()
        def isUrl ()
        def isUuid ()
        def operator[] (key)
        def operator[] (key)
        def swap (other)
        def taggedValue ([defaultValue=QCborValue()])
        def toArray ()
        def toArray (defaultValue)
        def toBool ([defaultValue=false])
        def toByteArray ([defaultValue={}])
        def toCbor ([opt=QCborValue.NoTransformation])
        def toCbor (writer[, opt=QCborValue.NoTransformation])
        def toDateTime ([defaultValue={}])
        def toDiagnosticNotation ([opts=QCborValue.Compact])
        def toDouble ([defaultValue=0])
        def toInteger ([defaultValue=0])
        def toJsonValue ()
        def toMap ()
        def toMap (defaultValue)
        def toRegularExpression ([defaultValue={}])
        def toSimpleType ([defaultValue=QCborSimpleType.Undefined])
        def toString ([defaultValue={}])
        def toUrl ([defaultValue={}])
        def toUuid ([defaultValue={}])
        def toVariant ()
        def type ()

    Static functions¶
        def fromCbor (ba[, error=None])
        def fromCbor (data, len[, error=None])
        def fromCbor (data, len[, error=None])
        def fromCbor (reader)
        def fromJsonValue (v)
        def fromVariant (variant)

QChildEvent
    Functions¶
        def added ()
        def child ()
        def polished ()
        def removed ()

QCollator
    Functions¶
        def caseSensitivity ()
        def compare (s1, len1, s2, len2)
        def compare (s1, s2)
        def compare (s1, s2)
        def ignorePunctuation ()
        def locale ()
        def numericMode ()
        def operator() (s1, s2)
        def operator() (s1, s2)
        def setCaseSensitivity (cs)
        def setIgnorePunctuation (on)
        def setLocale (locale)
        def setNumericMode (on)
        def sortKey (string)
        def swap (other)

QCollatorSortKey
    Functions¶
        def __lt__ (, rhs)
        def compare (key)
        def swap (other)

QCommandLineOption
    Functions¶
        def defaultValues ()
        def description ()
        def flags ()
        def names ()
        def setDefaultValue (defaultValue)
        def setDefaultValues (defaultValues)
        def setDescription (description)
        def setFlags (aflags)
        def setValueName (name)
        def swap (other)
        def valueName ()


QCommandLineParser

    Functions¶
        def addHelpOption ()
        def addOption (commandLineOption)
        def addOptions (options)
        def addPositionalArgument (name, description[, syntax=””])
        def addVersionOption ()
        def applicationDescription ()
        def clearPositionalArguments ()
        def errorText ()
        def helpText ()
        def isSet (name)
        def isSet (option)
        def optionNames ()
        def parse (arguments)
        def positionalArguments ()
        def process (app)
        def process (arguments)
        def setApplicationDescription (description)
        def setOptionsAfterPositionalArgumentsMode (mode)
        def setSingleDashWordOptionMode (parsingMode)
        def showHelp ([exitCode=0])
        def showVersion ()
        def unknownOptionNames ()
        def value (name)
        def value (option)
        def values (name)
        def values (option)

QCryptographicHash

    Functions¶
        def addData (data)
        def addData (data)
        def addData (device)
        def reset ()
        def result ()

    Static functions¶
        def hash (data, method)
        def hashLength (method)


QConcatenateTablesProxyModel

    Functions¶
        def addSourceModel (sourceModel)
        def mapFromSource (sourceIndex)
        def mapToSource (proxyIndex)
        def removeSourceModel (sourceModel)
        def sourceModels ()

QCoreApplication

    Functions¶
        def applicationNameChanged ()
        def applicationVersionChanged ()
        def installNativeEventFilter (filterObj)
        def organizationDomainChanged ()
        def organizationNameChanged ()
        def removeNativeEventFilter (filterObj)
        def shutdown ()

    Virtual functions¶
        def notify (arg__1, arg__2)

    Static functions¶

        def addLibraryPath (arg__1)
        def applicationDirPath ()
        def applicationFilePath ()
        def applicationName ()
        def applicationPid ()
        def applicationVersion ()
        def arguments ()
        def closingDown ()
        def eventDispatcher ()
        def exec_ ()
        def exit ([retcode=0])
        def installTranslator (messageFile)
        def instance ()
        def isQuitLockEnabled ()
        def isSetuidAllowed ()
        def libraryPaths ()
        def organizationDomain ()
        def organizationName ()
        def postEvent (receiver, event[, priority=Qt.NormalEventPriority])
        def processEvents ([flags=QEventLoop.AllEvents])
        def processEvents (flags, maxtime)
        def quit ()
        def removeLibraryPath (arg__1)
        def removePostedEvents (receiver[, eventType=0])
        def removeTranslator (messageFile)
        def sendEvent (receiver, event)
        def sendPostedEvents ([receiver=None[, event_type=0]])
        def setApplicationName (application)
        def setApplicationVersion (version)
        def setAttribute (attribute[, on=true])
        def setEventDispatcher (eventDispatcher)
        def setLibraryPaths (arg__1)
        def setOrganizationDomain (orgDomain)
        def setOrganizationName (orgName)
        def setQuitLockEnabled (enabled)
        def setSetuidAllowed (allow)
        def startingUp ()
        def testAttribute (attribute)
        def translate (context, key[, disambiguation=None[, n=-1]])

